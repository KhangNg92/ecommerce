{
  // Configuration for JavaScript files
  "extends": [
    "airbnb-base",
    "next/core-web-vitals", // Needed to avoid warning in next.js build: 'The Next.js plugin was not detected in your ESLint configuration'
    "plugin:prettier/recommended"
  ],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "semi": true,
        "tabWidth": 2,
        "printWidth": 100,
        "singleQuote": true,
        "trailingComma": "all",
        "jsxSingleQuote": true,
        "bracketSpacing": true,
        "endOfLine": "auto"
      }
    ] // Avoid conflict rule between Prettier and Airbnb Eslint
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": ["@typescript-eslint", "unused-imports", "tailwindcss", "simple-import-sort"],
      "extends": [
        "plugin:tailwindcss/recommended",
        "airbnb-base",
        "airbnb-typescript",
        "next/core-web-vitals",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "prettier/prettier": [
          "error",
          {
            "semi": true,
            "tabWidth": 2,
            "printWidth": 100,
            "singleQuote": true,
            "trailingComma": "all",
            "jsxSingleQuote": true,
            "bracketSpacing": true,
            "endOfLine": "auto"
          }
        ], // Avoid conflict rule between Prettier and Airbnb Eslint
        "no-param-reassign": "off",
        "import/extensions": "off", // Avoid missing file extension errors, TypeScript already provides a similar feature
        "react/function-component-definition": "off", // Disable Airbnb's specific function type
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "no-restricted-syntax": ["error", "ForInStatement", "LabeledStatement", "WithStatement"], // Overrides Airbnb configuration and enable no-restricted-syntax
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "simple-import-sort/imports": "warn", // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "warn", // Export configuration for `eslint-plugin-simple-import-sort`
        "import/order": "off", // Avoid conflict rule between `eslint-plugin-import` and `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
        "no-var": "error",
        "jsx-a11y/click-events-have-key-events": "off",
        "jsx-a11y/no-static-element-interactions": "off",
        "no-confusing-arrow": "off",
        "no-spaced-func": "off",
        "no-nested-ternary": "off",
        "array-callback-return": "off",
        "@typescript-eslint/indent": "off",
        "no-tabs": "off",
        "css-ruleorselectorexpected": "off",
        "react-hooks/exhaustive-deps": "off",
        "implicit-arrow-linebreak": "off",
        "no-trailing-spaces": "off",
        "prefer-destructuring": "off",
        "no-esle-return": "off",
        "object-shorthand": "off",
        "react/no-unescaped-entities": "off",
        "lines-around-directive": "off",
        "arrow-body-style": "off",
        "@typescript-eslint/quotes": "warn",
        "@typescript-eslint/comma-spacing": "warn",
        "@typescript-eslint/no-shadow": "warn",
        "consistent-return": "off",
        "prefer-arrow-callback": "off",
        "linebreak-style": "off",
        // Configuration for Tailwindcss
        "tailwindcss/no-custom-classname": "off"
      }
    },
    // // Configuration for testing
    // {
    //   "files": ["**/*.test.ts", "**/*.test.tsx"],
    //   "plugins": ["jest", "jest-formatting", "testing-library", "jest-dom"],
    //   "extends": [
    //     "plugin:jest/recommended",
    //     "plugin:jest-formatting/recommended",
    //     "plugin:testing-library/react",
    //     "plugin:jest-dom/recommended"
    //   ]
    // },
    // // Configuration for e2e testing (Cypress)
    // {
    //   "files": ["cypress/**/*.ts"],
    //   "plugins": ["cypress"],
    //   "extends": ["plugin:cypress/recommended"],
    //   "parserOptions": {
    //     "project": "./cypress/tsconfig.json"
    //   }
    // },
    // Configuration for Storybook
    {
      "files": ["*.stories.*"],
      "extends": ["plugin:storybook/recommended"],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true
          }
        ]
      }
    }
  ]
}
